name: Publicar Reto Diario y Desplegar Web

on:
  schedule:
    # Se ejecuta a las 5:30 AM UTC (7:30 AM en España), de Lunes a Viernes
    - cron: '30 5 * * 1-5'
  # También permite ejecutarlo manualmente para pruebas
  workflow_dispatch:

# Permisos especiales para que el robot pueda escribir en el repo y desplegar
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # TRABAJO 1: Preparar el reto del día
  preparar_reto:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Git
        run: |
          git config --global user.name 'Mathgym Publisher Bot'
          git config --global user.email 'actions@github.com'

      - name: Publicar el reto más antiguo del almacén
        id: publicador
        run: |
          # Busca el archivo más antiguo en todas las subcarpetas de 'almacen_retos'
          RETO_A_PUBLICAR=$(find almacen_retos -type f -printf '%T+ %p\n' | sort | head -n 1 | cut -d' ' -f2-)
          
          # Comprueba si el almacén está vacío
          if [ -z "$RETO_A_PUBLICAR" ]; then
            echo "⚠️ ¡Almacén de retos vacío! No hay nada que publicar."
            echo "COMMIT_NEEDED=false" >> $GITHUB_ENV
            exit 0
          fi
          
          echo "✅ Publicando el reto: $RETO_A_PUBLICAR"
          # Copia el contenido del reto a reto.json
          cp "$RETO_A_PUBLICAR" "reto.json"
          # Borra el reto del almacén para no repetirlo
          rm "$RETO_A_PUBLICAR"
          echo "COMMIT_NEEDED=true" >> $GITHUB_ENV

      - name: Guardar los cambios (si los hay)
        if: env.COMMIT_NEEDED == 'true'
        run: |
          git add reto.json
          git rm $(git ls-files --deleted)
          git commit -m "🚀 Publicado el reto del día $(date +'%Y-%m-%d')"
          git push

  # TRABAJO 2: Desplegar la web en GitHub Pages
  desplegar_web:
    # Este trabajo solo se ejecuta después de que el anterior termine con éxito
    needs: preparar_reto
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4
      - name: Configurar GitHub Pages
        uses: actions/configure-pages@v4
      - name: Subir artefactos de la web
        uses: actions/upload-pages-artifact@v3
        with:
          # Sube todo el contenido del repositorio para que la web se construya
          path: '.'
      - name: Desplegar en GitHub Pages
        uses: actions/deploy-pages@v4
